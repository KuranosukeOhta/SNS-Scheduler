---
description: AI rules derived by SpecStory from the project AI interaction history
globs: *
---

## HEADERS

## TECH STACK
- Frontend: Next.js (App Router) + TailwindCSS + ShadCnUI
- Backend: Supabase（Auth + DB） or Firebase
- Deployment: Vercel
- 外部連携: Twitter API v2（OAuth 2.0）

## PROJECT DOCUMENTATION & CONTEXT SYSTEM

## CODING STANDARDS

## UI/UX GUIDELINES
- Prioritize intuitive UI design.
- Focus on ease of use for students and faculty.

## WORKFLOW & RELEASE RULES

## DEBUGGING
- When `create-next-app` fails due to npm naming restrictions (e.g., capital letters in the directory name), use a temporary directory to create the project, then move the files to the desired directory.
  1. Create a temporary directory (e.g., `temp-app`).
  2. Create the Next.js project inside the temporary directory: `npx create-next-app@latest temp-app --typescript --tailwind --eslint --app --src-dir --import-alias "@/*"`. When prompted "Would you like to use Turbopack for `next dev`?", select "No" to proceed with the standard setup.
  3. Move the contents of the temporary directory to the desired project directory.
  4. Delete the temporary directory.
- When encountering errors related to `headers()` or `cookies()` within Server Actions, especially the error messages `Route "/login" used headers().get('origin')` or `cookies()` should be awaited before using its value`, refactor the code to separate the Server Actions' logic from the UI components. Move the server actions (e.g., `login`, `signup`, `loginWithGoogle`) to a separate `actions.ts` file and import them into the page component. This helps avoid conflicts with Next.js's rendering and data processing lifecycle.

## TESTING

## SECURITY

## DEPLOYMENT

## EXTERNAL API INTEGRATIONS
- Twitter API v2 (OAuth 2.0)

## ERROR HANDLING
- When encountering issues with file editing being blocked, especially with `.env` files, rename the file temporarily, edit it, and then rename it back. This is due to potential tool restrictions.

## SUPABASE SETUP
### Supabaseプロジェクトの設定手順

#### ステップ1：Supabaseプロジェクトの作成
1.  [Supabase公式サイト](https://supabase.com/)にアクセスし、アカウント登録またはログインをします。
2.  ダッシュボードで「New Project」ボタンを押し、組織を選択して新しいプロジェクトを作成します。
    -   プロジェクト名（例：`sns-scheduler`）とデータベースのパスワードを設定し、リージョン（例：`Northeast Asia (Tokyo)`）を選択します。

#### ステップ2：APIキーの取得と環境変数の設定
プロジェクトが作成されると、APIキーが発行されます。これをアプリケーションに設定します。

1.  プロジェクトのダッシュボードで、左側のメニューから**Settings**（歯車アイコン）をクリックし、**API**を選択します。
2.  **Project URL** と **Project API Keys** のセクションにある `anon` `public` キーをコピーします。
3.  お使いのPCのプロジェクトフォルダ（`SNS-Scheduler`）に、`.env.local` という名前のファイルを新規作成します。
4.  `.env.local.example` の内容をコピーし、先ほど取得したURLとキーを以下のように貼り付けます。

    **.env.local**
    ```
    NEXT_PUBLIC_SUPABASE_URL="ここにコピーしたProject URLを貼り付け"
    NEXT_PUBLIC_SUPABASE_ANON_KEY="ここにコピーしたanon publicキーを貼り付け"
    ```
    **注意：** `.env.local` ファイルは `.gitignore` によってGitの管理対象外となっているため、キーが外部に漏れることはありません。

#### ステップ3：Supabaseの認証設定
次に、Googleログインを有効にするための設定を行います。

1.  Supabaseのダッシュボードで、左側のメニューから**Authentication**（人型アイコン）をクリックします。
2.  **URL Configuration** を選択し、**Site URL** にローカル開発環境のURL `http://localhost:3000` を設定します。
    -   本番環境にデプロイした後は、そのURL（VercelのURLなど）を追加する必要があります。
3.  次に、**Providers** を選択し、リストの中から **Google** をクリックして設定を開きます。

#### ステップ4：Google Cloud PlatformでのOAuth設定
SupabaseでGoogle認証を有効にするには、Google Cloud Platform (GCP) でOAuthのクライアントIDとシークレットを取得する必要があります。

1.  [Google Cloud Console](https://console.cloud.google.com/)にアクセスし、新しいプロジェクトを作成します。
2.  左上のメニューから「APIとサービス」>「認証情報」を選択します。
3.  「＋認証情報を作成」をクリックし、「OAuthクライアントID」を選択します。
4.  「アプリケーションの種類」で「ウェブ アプリケーション」を選択します。
5.  「承認済みのリダイレクトURI」の「＋URIを追加」ボタンを押します。ここに、**前のステップ（ステップ3-3）でSupabaseのGoogleプロバイダー設定画面に表示されていた「Redirect URL」**（`https://<project-ref>.supabase.co/auth/v1/callback`のような形式です）を貼り付けます。
6.  作成ボタンを押すと、「クライアントID」と「クライアントシークレット」が表示されます。これらをコピーしておきます。

#### ステップ5：SupabaseにGoogleの認証情報を登録
1.  SupabaseのGoogleプロバイダー設定画面に戻ります。
2.  先ほどGCPで取得した「クライアントID」と「クライアントシークレット」をそれぞれ入力します。
3.  **Enable Google** のトグルをオンにして、設定を保存します。

#### ステップ6（推奨）：開発時のメール確認を無効化
メールアドレスとパスワードでのサインアップ機能を開発する際、メール確認のステップを省略するとテストがスムーズになります。

1.  SupabaseのAuthenticationの設定で、**Providers** > **Email** を選択します。
2.  **Confirm email** のトグルをオフにします。
    -   **注意：** 本番リリース前には、セキュリティのため必ずオンに戻してください。